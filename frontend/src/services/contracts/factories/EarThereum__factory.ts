/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { EarThereum, EarThereumInterface } from "../EarThereum";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "ArrayLengthMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "id",
        type: "bytes4",
      },
    ],
    name: "SampleAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "id",
        type: "bytes4",
      },
    ],
    name: "XMAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "ids",
        type: "bytes4[]",
      },
    ],
    name: "getExistingSampleIDs",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "existingSampleIDs",
        type: "bytes4[]",
      },
      {
        internalType: "uint8",
        name: "smpCount",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "id",
        type: "bytes4",
      },
    ],
    name: "getSampleData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "ids",
        type: "bytes4[]",
      },
    ],
    name: "getSampleDatas",
    outputs: [
      {
        internalType: "bytes[]",
        name: "sampleData",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "id",
        type: "bytes4",
      },
    ],
    name: "getXM",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "samples",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "header",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "id",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uploadSample",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "ids",
        type: "bytes4[]",
      },
      {
        internalType: "bytes[]",
        name: "sampleData",
        type: "bytes[]",
      },
    ],
    name: "uploadSamples",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "id",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uploadXM",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "xm",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d8c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063c011151d11610066578063c011151d1461010a578063d2a950a51461011d578063d629417a1461013d578063d73f112f1461015e578063f9ebd83e1461017157600080fd5b80638874ac52146100985780638d7544a0146100c25780639f3f7c84146100e2578063a07499e9146100f7575b600080fd5b6100ab6100a63660046108c5565b610184565b6040516100b9929190610907565b60405180910390f35b6100d56100d036600461097c565b6102b7565b6040516100b991906109e4565b6100f56100f03660046109f7565b610364565b005b6100d561010536600461097c565b6103e4565b6100f5610118366004610a7a565b61040c565b61013061012b3660046108c5565b61055a565b6040516100b99190610ae6565b61015061014b36600461097c565b6106c3565b6040516100b9929190610b48565b6100f561016c3660046109f7565b61076a565b6100d561017f36600461097c565b6107df565b606060008267ffffffffffffffff8111156101a1576101a1610b6d565b6040519080825280602002602001820160405280156101ca578160200160208202803683370190505b50915060005b60ff81168411156102af57600080600087878560ff168181106101f5576101f5610b83565b905060200201602081019061020a919061097c565b6001600160e01b03191681526020810191909152604001600020805461022f90610b99565b9050111561029d5784848260ff1681811061024c5761024c610b83565b9050602002016020810190610261919061097c565b838360ff168151811061027657610276610b83565b6001600160e01b0319909216602092830291909101909101528161029981610bd3565b9250505b806102a781610bd3565b9150506101d0565b509250929050565b6001600160e01b0319811660009081526001602052604090208054606091906102df90610b99565b80601f016020809104026020016040519081016040528092919081815260200182805461030b90610b99565b80156103585780601f1061032d57610100808354040283529160200191610358565b820191906000526020600020905b81548152906001019060200180831161033b57829003601f168201915b50505050509050919050565b6001600160e01b031983166000908152600160205260408120805461038890610b99565b905011156103ba576040516346c7551b60e11b81526001600160e01b0319841660048201526024015b60405180910390fd5b6001600160e01b0319831660009081526001602052604090206103de828483610c4f565b50505050565b6001600160e01b0319811660009081526020819052604090208054606091906102df90610b99565b82811461045c57604051639c875a0560e01b815260206004820152601f60248201527f4561725468657265756d3a2041727261794c656e6774684d69736d617463680060448201526064016103b1565b60005b60ff81168411156105535760008086868460ff1681811061048257610482610b83565b9050602002016020810190610497919061097c565b6001600160e01b0319168152602081019190915260400160002080546104bc90610b99565b90506000036105415782828260ff168181106104da576104da610b83565b90506020028101906104ec9190610d0f565b60008088888660ff1681811061050457610504610b83565b9050602002016020810190610519919061097c565b6001600160e01b031916815260208101919091526040016000209161053f919083610c4f565b505b8061054b81610bd3565b91505061045f565b5050505050565b60608167ffffffffffffffff81111561057557610575610b6d565b6040519080825280602002602001820160405280156105a857816020015b60608152602001906001900390816105935790505b50905060005b60ff81168311156106bc5760008085858460ff168181106105d1576105d1610b83565b90506020020160208101906105e6919061097c565b6001600160e01b03191681526020810191909152604001600020805461060b90610b99565b80601f016020809104026020016040519081016040528092919081815260200182805461063790610b99565b80156106845780601f1061065957610100808354040283529160200191610684565b820191906000526020600020905b81548152906001019060200180831161066757829003601f168201915b5050505050828260ff168151811061069e5761069e610b83565b602002602001018190525080806106b490610bd3565b9150506105ae565b5092915050565b6000602081905290815260409020805481906106de90610b99565b80601f016020809104026020016040519081016040528092919081815260200182805461070a90610b99565b80156107575780601f1061072c57610100808354040283529160200191610757565b820191906000526020600020905b81548152906001019060200180831161073a57829003601f168201915b5050506001909301549192505060ff1682565b6001600160e01b031983166000908152602081905260408120805461078e90610b99565b905011156107bb5760405163168ed19760e01b81526001600160e01b0319841660048201526024016103b1565b6001600160e01b0319831660009081526020819052604090206103de828483610c4f565b600160205260009081526040902080546107f890610b99565b80601f016020809104026020016040519081016040528092919081815260200182805461082490610b99565b80156108715780601f1061084657610100808354040283529160200191610871565b820191906000526020600020905b81548152906001019060200180831161085457829003601f168201915b505050505081565b60008083601f84011261088b57600080fd5b50813567ffffffffffffffff8111156108a357600080fd5b6020830191508360208260051b85010111156108be57600080fd5b9250929050565b600080602083850312156108d857600080fd5b823567ffffffffffffffff8111156108ef57600080fd5b6108fb85828601610879565b90969095509350505050565b604080825283519082018190526000906020906060840190828701845b8281101561094a5781516001600160e01b03191684529284019290840190600101610924565b50505060ff9490941692019190915250919050565b80356001600160e01b03198116811461097757600080fd5b919050565b60006020828403121561098e57600080fd5b6109978261095f565b9392505050565b6000815180845260005b818110156109c4576020818501810151868301820152016109a8565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610997602083018461099e565b600080600060408486031215610a0c57600080fd5b610a158461095f565b9250602084013567ffffffffffffffff80821115610a3257600080fd5b818601915086601f830112610a4657600080fd5b813581811115610a5557600080fd5b876020828501011115610a6757600080fd5b6020830194508093505050509250925092565b60008060008060408587031215610a9057600080fd5b843567ffffffffffffffff80821115610aa857600080fd5b610ab488838901610879565b90965094506020870135915080821115610acd57600080fd5b50610ada87828801610879565b95989497509550505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610b3b57603f19888603018452610b2985835161099e565b94509285019290850190600101610b0d565b5092979650505050505050565b604081526000610b5b604083018561099e565b905060ff831660208301529392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610bad57607f821691505b602082108103610bcd57634e487b7160e01b600052602260045260246000fd5b50919050565b600060ff821660ff8103610bf757634e487b7160e01b600052601160045260246000fd5b60010192915050565b601f821115610c4a57600081815260208120601f850160051c81016020861015610c275750805b601f850160051c820191505b81811015610c4657828155600101610c33565b5050505b505050565b67ffffffffffffffff831115610c6757610c67610b6d565b610c7b83610c758354610b99565b83610c00565b6000601f841160018114610caf5760008515610c975750838201355b600019600387901b1c1916600186901b178355610553565b600083815260209020601f19861690835b82811015610ce05786850135825560209485019460019092019101610cc0565b5086821015610cfd5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6000808335601e19843603018112610d2657600080fd5b83018035915067ffffffffffffffff821115610d4157600080fd5b6020019150368190038213156108be57600080fdfea2646970667358221220c8e37e4f3e369a42269734f289fe2463a600a4a527edc73b94df4a906e42dd1164736f6c63430008110033";

type EarThereumConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EarThereumConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EarThereum__factory extends ContractFactory {
  constructor(...args: EarThereumConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EarThereum & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EarThereum__factory {
    return super.connect(runner) as EarThereum__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EarThereumInterface {
    return new Interface(_abi) as EarThereumInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EarThereum {
    return new Contract(address, _abi, runner) as unknown as EarThereum;
  }
}
