/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { EarThereum, EarThereumInterface } from "../EarThereum";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "ArrayLengthMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "id",
        type: "bytes4",
      },
    ],
    name: "SampleAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "ids",
        type: "bytes4[]",
      },
    ],
    name: "getExistingSampleIDs",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "existingSampleIDs",
        type: "bytes4[]",
      },
      {
        internalType: "uint8",
        name: "smpCount",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "id",
        type: "bytes4",
      },
    ],
    name: "getSampleData",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "ids",
        type: "bytes4[]",
      },
    ],
    name: "getSampleDatas",
    outputs: [
      {
        internalType: "bytes[]",
        name: "sampleData",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    name: "samples",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "header",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "id",
        type: "bytes4",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uploadSample",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "ids",
        type: "bytes4[]",
      },
      {
        internalType: "bytes[]",
        name: "sampleData",
        type: "bytes[]",
      },
    ],
    name: "uploadSamples",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610beb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80638874ac5214610067578063a07499e914610091578063c011151d146100b1578063d2a950a5146100c6578063d629417a146100e6578063d73f112f14610107575b600080fd5b61007a610075366004610724565b61011a565b604051610088929190610766565b60405180910390f35b6100a461009f3660046107db565b61024d565b6040516100889190610843565b6100c46100bf366004610856565b6102fa565b005b6100d96100d4366004610724565b61044d565b60405161008891906108c2565b6100f96100f43660046107db565b6105b6565b604051610088929190610924565b6100c4610115366004610949565b61065d565b606060008267ffffffffffffffff811115610137576101376109cc565b604051908082528060200260200182016040528015610160578160200160208202803683370190505b50915060005b60ff811684111561024557600080600087878560ff1681811061018b5761018b6109e2565b90506020020160208101906101a091906107db565b6001600160e01b0319168152602081019190915260400160002080546101c5906109f8565b905011156102335784848260ff168181106101e2576101e26109e2565b90506020020160208101906101f791906107db565b838360ff168151811061020c5761020c6109e2565b6001600160e01b0319909216602092830291909101909101528161022f81610a32565b9250505b8061023d81610a32565b915050610166565b509250929050565b6001600160e01b031981166000908152602081905260409020805460609190610275906109f8565b80601f01602080910402602001604051908101604052809291908181526020018280546102a1906109f8565b80156102ee5780601f106102c3576101008083540402835291602001916102ee565b820191906000526020600020905b8154815290600101906020018083116102d157829003601f168201915b50505050509050919050565b82811461034f57604051639c875a0560e01b815260206004820152601f60248201527f4561725468657265756d3a2041727261794c656e6774684d69736d617463680060448201526064015b60405180910390fd5b60005b60ff81168411156104465760008086868460ff16818110610375576103756109e2565b905060200201602081019061038a91906107db565b6001600160e01b0319168152602081019190915260400160002080546103af906109f8565b90506000036104345782828260ff168181106103cd576103cd6109e2565b90506020028101906103df9190610a5f565b60008088888660ff168181106103f7576103f76109e2565b905060200201602081019061040c91906107db565b6001600160e01b0319168152602081019190915260400160002091610432919083610af5565b505b8061043e81610a32565b915050610352565b5050505050565b60608167ffffffffffffffff811115610468576104686109cc565b60405190808252806020026020018201604052801561049b57816020015b60608152602001906001900390816104865790505b50905060005b60ff81168311156105af5760008085858460ff168181106104c4576104c46109e2565b90506020020160208101906104d991906107db565b6001600160e01b0319168152602081019190915260400160002080546104fe906109f8565b80601f016020809104026020016040519081016040528092919081815260200182805461052a906109f8565b80156105775780601f1061054c57610100808354040283529160200191610577565b820191906000526020600020905b81548152906001019060200180831161055a57829003601f168201915b5050505050828260ff1681518110610591576105916109e2565b602002602001018190525080806105a790610a32565b9150506104a1565b5092915050565b6000602081905290815260409020805481906105d1906109f8565b80601f01602080910402602001604051908101604052809291908181526020018280546105fd906109f8565b801561064a5780601f1061061f5761010080835404028352916020019161064a565b820191906000526020600020905b81548152906001019060200180831161062d57829003601f168201915b5050506001909301549192505060ff1682565b6001600160e01b0319831660009081526020819052604081208054610681906109f8565b905011156106ae5760405163168ed19760e01b81526001600160e01b031984166004820152602401610346565b6001600160e01b0319831660009081526020819052604090206106d2828483610af5565b50505050565b60008083601f8401126106ea57600080fd5b50813567ffffffffffffffff81111561070257600080fd5b6020830191508360208260051b850101111561071d57600080fd5b9250929050565b6000806020838503121561073757600080fd5b823567ffffffffffffffff81111561074e57600080fd5b61075a858286016106d8565b90969095509350505050565b604080825283519082018190526000906020906060840190828701845b828110156107a95781516001600160e01b03191684529284019290840190600101610783565b50505060ff9490941692019190915250919050565b80356001600160e01b0319811681146107d657600080fd5b919050565b6000602082840312156107ed57600080fd5b6107f6826107be565b9392505050565b6000815180845260005b8181101561082357602081850181015186830182015201610807565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006107f660208301846107fd565b6000806000806040858703121561086c57600080fd5b843567ffffffffffffffff8082111561088457600080fd5b610890888389016106d8565b909650945060208701359150808211156108a957600080fd5b506108b6878288016106d8565b95989497509550505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561091757603f198886030184526109058583516107fd565b945092850192908501906001016108e9565b5092979650505050505050565b60408152600061093760408301856107fd565b905060ff831660208301529392505050565b60008060006040848603121561095e57600080fd5b610967846107be565b9250602084013567ffffffffffffffff8082111561098457600080fd5b818601915086601f83011261099857600080fd5b8135818111156109a757600080fd5b8760208285010111156109b957600080fd5b6020830194508093505050509250925092565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610a0c57607f821691505b602082108103610a2c57634e487b7160e01b600052602260045260246000fd5b50919050565b600060ff821660ff8103610a5657634e487b7160e01b600052601160045260246000fd5b60010192915050565b6000808335601e19843603018112610a7657600080fd5b83018035915067ffffffffffffffff821115610a9157600080fd5b60200191503681900382131561071d57600080fd5b601f821115610af057600081815260208120601f850160051c81016020861015610acd5750805b601f850160051c820191505b81811015610aec57828155600101610ad9565b5050505b505050565b67ffffffffffffffff831115610b0d57610b0d6109cc565b610b2183610b1b83546109f8565b83610aa6565b6000601f841160018114610b555760008515610b3d5750838201355b600019600387901b1c1916600186901b178355610446565b600083815260209020601f19861690835b82811015610b865786850135825560209485019460019092019101610b66565b5086821015610ba35760001960f88860031b161c19848701351681555b505060018560011b018355505050505056fea26469706673582212202fcb0cfd21a5d3590d88d3d0a8791e1dea501f772dca87fb0031d3aef4937e7764736f6c63430008110033";

type EarThereumConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EarThereumConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EarThereum__factory extends ContractFactory {
  constructor(...args: EarThereumConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EarThereum & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EarThereum__factory {
    return super.connect(runner) as EarThereum__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EarThereumInterface {
    return new Interface(_abi) as EarThereumInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EarThereum {
    return new Contract(address, _abi, runner) as unknown as EarThereum;
  }
}
